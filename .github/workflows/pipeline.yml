name: Pipeline

env:
  PROJECT_ID: instaphant
  PROJECT_NUMBER: 78987012965
  DOCKER_REGISTRY: instaphant
  ASTRA_ORG_ID: bc43b279-f9c3-432f-b4f2-f1dac2afa693

on:
  push:
    branches: ["main"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  tag:
    name: "Tag repo"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Conventional Changelog Action
        id: conventional_changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          preset: conventionalcommits
          github-token: ${{ secrets.github_token }}
          skip-commit: true
    outputs:
      version: ${{ steps.conventional_changelog.outputs.version }}

  docker:
    runs-on: ubuntu-latest
    needs: tag
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: "google-github-actions/auth@v2"
        id: gcloud_auth
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: "projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/wif-pool/providers/wif-provider"
          service_account: "default@${{ env.PROJECT_ID }}.iam.gserviceaccount.com"
          token_format: access_token
      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: europe-west2-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcloud_auth.outputs.access_token }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          platforms: linux/amd64
          cache-from: type=registry,ref=europe-west2-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REGISTRY }}/api:latest
          push: true
          tags: |
            europe-west2-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REGISTRY }}/api:latest
            europe-west2-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REGISTRY }}/api:${{ needs.tag.outputs.version }}
    outputs:
      image: europe-west2-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REGISTRY }}/api:${{ needs.tag.outputs.version }}

  opentofu:
    name: "OpenTofu"
    runs-on: ubuntu-latest
    needs: docker
    permissions:
      contents: "read"
      id-token: "write"
    defaults:
      run:
        working-directory: ./infrastructure
    outputs:
      app_url: ${{steps.apply_opentofu.outputs.app_url}}
    steps:
      - uses: actions/checkout@v4

      - name: Set Environment Variables
        shell: bash
        run: |
          echo "TF_VAR_api_image=${{ needs.docker.outputs.image }}" >> $GITHUB_ENV
          echo "TF_VAR_project_id=${{ env.PROJECT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_astra_org_id=${{ env.ASTRA_ORG_ID }}" >> $GITHUB_ENV

      - uses: "google-github-actions/auth@v2"
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: "projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/wif-pool/providers/wif-provider"
          service_account: "default@${{ env.PROJECT_ID }}.iam.gserviceaccount.com"

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.6.0

      - name: "Apply OpenTofu"
        id: apply_opentofu
        uses: ./.github/workflows/opentofu
        with:
          astra_api_token: ${{ secrets.ASTRA_API_TOKEN }}

  deploy:
    needs: opentofu
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ui/
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
      - name: Build
        run: |
          echo "VITE_API_URL=${{ needs.opentofu.outputs.app_url }}/query" >> .env.production
          pnpm run build
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./ui/dist"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
